# ------------------------------------------
# 4. .github/workflows/terraform.yml - GitHub Actions CI/CD for Terraform
# ------------------------------------------
name: Terraform EKS Infrastructure

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Terraform Action"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy

jobs:
  terraform:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.5

      - name: Auto-import existing resources
        run: |
          terraform init

          terraform state list | grep aws_ecr_repository.flask_repo || \
            terraform import aws_ecr_repository.flask_repo flask-hello-world

          terraform state show aws_ecr_repository.flask_repo || \
            terraform import aws_ecr_repository.flask_repo flask-hello-world

          
          terraform state list | grep 'module.eks.aws_cloudwatch_log_group.this\[0\]' || \
            terraform import 'module.eks.aws_cloudwatch_log_group.this[0]' /aws/eks/flask-eks-cluster/cluster

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform ${{ github.event.inputs.action }}
        run: terraform ${{ github.event.inputs.action }} -auto-approve